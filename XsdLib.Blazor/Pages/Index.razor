@using System.Xml
@using System.Xml.Schema
@page "/"


Last opp xsd fil
<InputFile OnChange="@LoadFiles" multiple accept=".xsd"/>

@if(SchemaSet is not null)
{
    <p>Schema set loaded @SchemaSet.Count</p>
    <ul>

    @foreach(var element in SchemaSet.GlobalElements.Names)
    {
        <li>@element</li>
    }
    </ul>

    
}
@if(Content is not null)
{
    <pre>@Content</pre>
}

@code {
    private XmlSchemaSet? SchemaSet;

    private string? Content;

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        SchemaSet = new XmlSchemaSet();

        using var mStream = new MemoryStream();
        await e.File.OpenReadStream(100000000000).CopyToAsync(mStream);
        mStream.Seek(0, SeekOrigin.Begin);
        using XmlReader reader = XmlReader.Create(mStream);

        

        SchemaSet.Add(null, reader);
        SchemaSet.Compile();

        var generator = new XsdLib.Generator(SchemaSet);

        foreach(var name in SchemaSet.GlobalElements.Names)
        {
            Console.WriteLine(name.GetType().FullName);
        }

        var rootElementName = SchemaSet.GlobalElements.Names.OfType<XmlQualifiedName>().FirstOrDefault();
        var rootClass = generator.Generate(rootElementName.Name);
        
        Content = StringGenerator.ToClass(rootClass);
    }
}
